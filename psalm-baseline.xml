<?xml version="1.0" encoding="UTF-8"?>
<files psalm-version="5.4.0@62db5d4f6a7ae0a20f7cc5a4952d730272fc0863">
  <file src="src/ArrayInput.php">
    <DocblockTypeContradiction occurrences="1">
      <code>is_array($value)</code>
    </DocblockTypeContradiction>
    <InvalidPropertyAssignmentValue occurrences="2">
      <code>$this-&gt;prepareRequiredValidationFailureMessage()</code>
      <code>$this-&gt;prepareRequiredValidationFailureMessage()</code>
    </InvalidPropertyAssignmentValue>
    <MixedArgument occurrences="2">
      <code>$this-&gt;getFallbackValue()</code>
      <code>$this-&gt;getFallbackValue()</code>
    </MixedArgument>
    <MixedAssignment occurrences="3">
      <code>$result[$key]</code>
      <code>$value</code>
      <code>$value</code>
    </MixedAssignment>
    <MoreSpecificImplementedParamType occurrences="2">
      <code>$value</code>
      <code>$value</code>
    </MoreSpecificImplementedParamType>
    <NonInvariantDocblockPropertyType occurrences="1">
      <code>$value</code>
    </NonInvariantDocblockPropertyType>
  </file>
  <file src="src/BaseInputFilter.php">
    <DocblockTypeContradiction occurrences="1">
      <code>$input instanceof InputInterface &amp;&amp; (empty($name) || is_int($name))</code>
    </DocblockTypeContradiction>
    <InvalidReturnStatement occurrences="1">
      <code>$messages</code>
    </InvalidReturnStatement>
    <InvalidReturnType occurrences="1">
      <code>array&lt;string, array&lt;array-key, string&gt;&gt;</code>
    </InvalidReturnType>
    <MixedArgument occurrences="1">
      <code>$input</code>
    </MixedArgument>
    <MixedArgumentTypeCoercion occurrences="1">
      <code>$inputs</code>
    </MixedArgumentTypeCoercion>
    <MixedAssignment occurrences="3">
      <code>$inputContext</code>
      <code>$unknownInputs[$key]</code>
      <code>$value</code>
    </MixedAssignment>
    <MixedPropertyTypeCoercion occurrences="1">
      <code>$inputs</code>
    </MixedPropertyTypeCoercion>
    <PossiblyInvalidArgument occurrences="1">
      <code>$input</code>
    </PossiblyInvalidArgument>
    <PossiblyNullArrayOffset occurrences="1">
      <code>$this-&gt;inputs</code>
    </PossiblyNullArrayOffset>
    <RedundantCastGivenDocblockType occurrences="1">
      <code>(string) $name</code>
    </RedundantCastGivenDocblockType>
    <TooManyArguments occurrences="2">
      <code>isValid</code>
      <code>isValid</code>
    </TooManyArguments>
  </file>
  <file src="src/CollectionInputFilter.php">
    <ImplementedParamTypeMismatch occurrences="2">
      <code>$name</code>
      <code>$name</code>
    </ImplementedParamTypeMismatch>
    <ImplementedReturnTypeMismatch occurrences="2">
      <code>array&lt;array-key, array&lt;string, array&lt;array-key, string&gt;&gt;&gt;</code>
      <code>array&lt;array-key, array&lt;string, array&lt;array-key, string&gt;&gt;&gt;</code>
    </ImplementedReturnTypeMismatch>
    <InvalidArgument occurrences="1">
      <code>$data</code>
    </InvalidArgument>
    <InvalidPropertyAssignmentValue occurrences="5">
      <code>$name</code>
      <code>$this-&gt;collectionMessages</code>
      <code>$this-&gt;collectionMessages</code>
      <code>$this-&gt;invalidInputs</code>
      <code>$this-&gt;validInputs</code>
    </InvalidPropertyAssignmentValue>
    <LessSpecificImplementedReturnType occurrences="2">
      <code>array&lt;array-key, array&gt;</code>
      <code>array&lt;array-key, array&gt;</code>
    </LessSpecificImplementedReturnType>
    <MixedArgument occurrences="1">
      <code>$data</code>
    </MixedArgument>
    <MixedAssignment occurrences="1">
      <code>$data</code>
    </MixedAssignment>
  </file>
  <file src="src/Factory.php">
    <InvalidReturnStatement occurrences="1">
      <code>$inputFilter</code>
    </InvalidReturnStatement>
    <InvalidReturnType occurrences="1">
      <code>InputFilterInterface</code>
    </InvalidReturnType>
    <MixedArgument occurrences="9">
      <code>$inputFilterSpecification['count']</code>
      <code>$inputFilterSpecification['input_filter']</code>
      <code>$inputFilterSpecification['required']</code>
      <code>$inputFilterSpecification['required_message']</code>
      <code>$key</code>
      <code>$name</code>
      <code>$priority</code>
      <code>$value</code>
      <code>$value['type']</code>
    </MixedArgument>
    <MixedArgumentTypeCoercion occurrences="3">
      <code>$filter</code>
      <code>$inputSpecification</code>
      <code>$key</code>
    </MixedArgumentTypeCoercion>
    <MixedArrayAccess occurrences="3">
      <code>$filter['name']</code>
      <code>$filter['options']</code>
      <code>$filter['priority']</code>
    </MixedArrayAccess>
    <MixedAssignment occurrences="5">
      <code>$key</code>
      <code>$name</code>
      <code>$options</code>
      <code>$priority</code>
      <code>$value</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="1">
      <code>new $class()</code>
    </MixedMethodCall>
    <PossiblyInvalidArgument occurrences="2">
      <code>$value</code>
      <code>$value</code>
    </PossiblyInvalidArgument>
    <PossiblyUndefinedMethod occurrences="2">
      <code>add</code>
      <code>add</code>
    </PossiblyUndefinedMethod>
  </file>
  <file src="src/FileInput.php">
    <InvalidPropertyAssignmentValue occurrences="1">
      <code>$this-&gt;prepareRequiredValidationFailureMessage()</code>
    </InvalidPropertyAssignmentValue>
    <MixedAssignment occurrences="1">
      <code>$rawValue</code>
    </MixedAssignment>
    <MoreSpecificImplementedParamType occurrences="2">
      <code>$value</code>
      <code>$value</code>
    </MoreSpecificImplementedParamType>
  </file>
  <file src="src/FileInput/HttpServerFileInputDecorator.php">
    <MixedAssignment occurrences="5">
      <code>$fileData</code>
      <code>$newValue[]</code>
      <code>$rawValue</code>
      <code>$value</code>
      <code>$value</code>
    </MixedAssignment>
    <RedundantCondition occurrences="2">
      <code>is_array($rawValue)</code>
      <code>is_array($rawValue)</code>
    </RedundantCondition>
  </file>
  <file src="src/FileInput/PsrFileInputDecorator.php">
    <MixedArgument occurrences="1">
      <code>$rawValue[0]</code>
    </MixedArgument>
    <MixedAssignment occurrences="5">
      <code>$fileData</code>
      <code>$newValue[]</code>
      <code>$rawValue</code>
      <code>$value</code>
      <code>$value</code>
    </MixedAssignment>
    <MixedInferredReturnType occurrences="1">
      <code>UploadedFileInterface|UploadedFileInterface[]</code>
    </MixedInferredReturnType>
    <MixedReturnStatement occurrences="2">
      <code>$filter-&gt;filter($value)</code>
      <code>$value</code>
    </MixedReturnStatement>
    <MixedReturnTypeCoercion occurrences="1">
      <code>$newValue</code>
    </MixedReturnTypeCoercion>
    <MoreSpecificImplementedParamType occurrences="1">
      <code>$rawValue</code>
    </MoreSpecificImplementedParamType>
  </file>
  <file src="src/Input.php">
    <DocblockTypeContradiction occurrences="1">
      <code>is_array($this-&gt;errorMessage)</code>
    </DocblockTypeContradiction>
    <ImplementedReturnTypeMismatch occurrences="1">
      <code>null|string</code>
    </ImplementedReturnTypeMismatch>
    <InvalidPropertyAssignmentValue occurrences="1">
      <code>$this-&gt;prepareRequiredValidationFailureMessage()</code>
    </InvalidPropertyAssignmentValue>
    <MixedArgument occurrences="1">
      <code>$notEmpty-&gt;getTranslatorTextDomain()</code>
    </MixedArgument>
    <MixedAssignment occurrences="2">
      <code>$translator</code>
      <code>$value</code>
    </MixedAssignment>
    <PossiblyUndefinedMethod occurrences="3">
      <code>getOption</code>
      <code>getTranslator</code>
      <code>getTranslatorTextDomain</code>
    </PossiblyUndefinedMethod>
    <RedundantCastGivenDocblockType occurrences="4">
      <code>(bool) $allowEmpty</code>
      <code>(bool) $breakOnFailure</code>
      <code>(bool) $continueIfEmpty</code>
      <code>(string) $errorMessage</code>
    </RedundantCastGivenDocblockType>
  </file>
  <file src="src/InputFilter.php">
    <PossiblyInvalidArgument occurrences="1">
      <code>$input</code>
    </PossiblyInvalidArgument>
  </file>
  <file src="src/InputFilterAbstractServiceFactory.php">
    <DeprecatedInterface occurrences="1">
      <code>InputFilterAbstractServiceFactory</code>
    </DeprecatedInterface>
    <MixedArgument occurrences="1">
      <code>$config</code>
    </MixedArgument>
    <MixedArrayAccess occurrences="2">
      <code>$allConfig['input_filter_specs']</code>
      <code>$allConfig['input_filter_specs'][$rName]</code>
    </MixedArrayAccess>
    <MixedAssignment occurrences="2">
      <code>$allConfig</code>
      <code>$config</code>
    </MixedAssignment>
    <ParamNameMismatch occurrences="6">
      <code>$cName</code>
      <code>$container</code>
      <code>$container</code>
      <code>$rName</code>
      <code>$rName</code>
      <code>$services</code>
    </ParamNameMismatch>
  </file>
  <file src="src/InputFilterPluginManager.php">
    <MethodSignatureMismatch occurrences="2">
      <code>InputFilterPluginManager</code>
      <code>InputFilterPluginManager</code>
    </MethodSignatureMismatch>
    <NonInvariantDocblockPropertyType occurrences="1">
      <code>$factories</code>
    </NonInvariantDocblockPropertyType>
    <PropertyTypeCoercion occurrences="2">
      <code>$this-&gt;initializers</code>
      <code>$this-&gt;initializers</code>
    </PropertyTypeCoercion>
  </file>
  <file src="src/InputFilterPluginManagerFactory.php">
    <DeprecatedInterface occurrences="1">
      <code>InputFilterPluginManagerFactory</code>
    </DeprecatedInterface>
    <ParamNameMismatch occurrences="1">
      <code>$container</code>
    </ParamNameMismatch>
  </file>
  <file src="src/Module.php">
    <UndefinedDocblockClass occurrences="1">
      <code>ModuleManager</code>
    </UndefinedDocblockClass>
  </file>
  <file src="src/OptionalInputFilter.php">
    <ImplementedReturnTypeMismatch occurrences="2">
      <code>array&lt;string, mixed&gt;|null</code>
      <code>array&lt;string, mixed&gt;|null</code>
    </ImplementedReturnTypeMismatch>
  </file>
  <file src="test/ArrayInputTest.php">
    <ArgumentTypeCoercion occurrences="1">
      <code>$valueMap</code>
    </ArgumentTypeCoercion>
    <ImplementedReturnTypeMismatch occurrences="2">
      <code>string[]</code>
    </ImplementedReturnTypeMismatch>
    <InvalidReturnStatement occurrences="1">
      <code>$dataSets</code>
    </InvalidReturnStatement>
    <InvalidReturnType occurrences="1"/>
    <MissingClosureParamType occurrences="3">
      <code>$set</code>
      <code>$set</code>
      <code>$set</code>
    </MissingClosureParamType>
    <MixedArgument occurrences="1">
      <code>$this-&gt;input-&gt;getValue()</code>
    </MixedArgument>
    <MixedArrayAccess occurrences="5">
      <code>$set['raw']</code>
      <code>$set['raw']</code>
      <code>$set[1]</code>
      <code>$set[2]</code>
      <code>$set[4]</code>
    </MixedArrayAccess>
    <MixedArrayAssignment occurrences="5">
      <code>$set['raw']</code>
      <code>$set['raw']</code>
      <code>$set[1]</code>
      <code>$set[2]</code>
      <code>$set[4]</code>
    </MixedArrayAssignment>
    <MixedAssignment occurrences="4">
      <code>$value</code>
      <code>$values[0]</code>
      <code>$values[0]</code>
      <code>$values[1]</code>
    </MixedAssignment>
    <MixedReturnTypeCoercion occurrences="4">
      <code>$dataSets</code>
      <code>$dataSets</code>
    </MixedReturnTypeCoercion>
    <RedundantCondition occurrences="2">
      <code>isArray</code>
      <code>isArray</code>
    </RedundantCondition>
  </file>
  <file src="test/BaseInputFilterTest.php">
    <InvalidArgument occurrences="1">
      <code>['nested' =&gt; ['nested-input1', 'nested-input2']]</code>
    </InvalidArgument>
    <InvalidDocblock occurrences="1">
      <code>public function addMethodArgumentsProvider(): array</code>
    </InvalidDocblock>
    <MissingClosureParamType occurrences="2">
      <code>$inputTypeData</code>
      <code>$inputTypeData</code>
    </MissingClosureParamType>
    <MissingClosureReturnType occurrences="2">
      <code>static fn($inputTypeData) =&gt; $inputTypeData[1]</code>
      <code>static fn($inputTypeData) =&gt; $inputTypeData[2]</code>
    </MissingClosureReturnType>
    <MixedArgument occurrences="4">
      <code>$dataTypes['Traversable']($data)</code>
      <code>$input</code>
      <code>$set[5]</code>
      <code>$set[6]</code>
    </MixedArgument>
    <MixedArgumentTypeCoercion occurrences="3">
      <code>$msg</code>
      <code>$msg</code>
      <code>$name</code>
    </MixedArgumentTypeCoercion>
    <MixedArrayAccess occurrences="5">
      <code>$filter1-&gt;getValues()['nested']['nestedField1']</code>
      <code>$filter1-&gt;getValues()['nested']['nestedField1']</code>
      <code>$filter1-&gt;getValues()['nested']['nestedField1']</code>
      <code>$inputTypeData[1]</code>
      <code>$inputTypeData[2]</code>
    </MixedArrayAccess>
    <MixedArrayAssignment occurrences="3">
      <code>$set[0][$name]</code>
      <code>$set[5][$name]</code>
      <code>$set[6][$name]</code>
    </MixedArrayAssignment>
    <MixedAssignment occurrences="9">
      <code>$expectedRawValue</code>
      <code>$expectedValue</code>
      <code>$input</code>
      <code>$input</code>
      <code>$set[0][$name]</code>
      <code>$set[5][$name]</code>
      <code>$set[6][$name]</code>
      <code>$tmpTemplate[2]</code>
      <code>$tmpTemplate[3]</code>
    </MixedAssignment>
    <MixedInferredReturnType occurrences="1"/>
    <MixedReturnTypeCoercion occurrences="2">
      <code>$dataSets</code>
    </MixedReturnTypeCoercion>
    <PossiblyInvalidArgument occurrences="3">
      <code>$input</code>
      <code>$input</code>
      <code>$input</code>
    </PossiblyInvalidArgument>
    <PossiblyNullArgument occurrences="5">
      <code>$expectedInputName</code>
      <code>$expectedInputName</code>
      <code>$expectedInputName</code>
      <code>$expectedInputName</code>
      <code>$expectedInputName</code>
    </PossiblyNullArgument>
    <PossiblyUndefinedMethod occurrences="3">
      <code>getName</code>
      <code>getName</code>
      <code>isRequired</code>
    </PossiblyUndefinedMethod>
  </file>
  <file src="test/FactoryTest.php">
    <PossiblyNullReference occurrences="2">
      <code>getPluginManager</code>
      <code>getPluginManager</code>
    </PossiblyNullReference>
    <PossiblyUndefinedMethod occurrences="2">
      <code>breakOnFailure</code>
      <code>breakOnFailure</code>
    </PossiblyUndefinedMethod>
    <UndefinedInterfaceMethod occurrences="1">
      <code>continueIfEmpty</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="test/FileInput/HttpServerFileInputDecoratorTest.php">
    <ImplementedReturnTypeMismatch occurrences="1">
      <code>array&lt;string, string&gt;</code>
    </ImplementedReturnTypeMismatch>
    <InvalidArgument occurrences="2">
      <code>''</code>
      <code>''</code>
    </InvalidArgument>
    <InvalidReturnStatement occurrences="1">
      <code>$dataSets</code>
    </InvalidReturnStatement>
    <InvalidReturnType occurrences="1">
      <code>iterable</code>
    </InvalidReturnType>
    <NonInvariantDocblockPropertyType occurrences="1">
      <code>$input</code>
    </NonInvariantDocblockPropertyType>
    <PropertyTypeCoercion occurrences="1">
      <code>new FileInput('foo')</code>
    </PropertyTypeCoercion>
  </file>
  <file src="test/FileInput/PsrFileInputDecoratorTest.php">
    <ImplementedReturnTypeMismatch occurrences="3">
      <code>UploadedFileInterface</code>
    </ImplementedReturnTypeMismatch>
    <InvalidReturnType occurrences="1"/>
    <NonInvariantDocblockPropertyType occurrences="1">
      <code>$input</code>
    </NonInvariantDocblockPropertyType>
    <PropertyTypeCoercion occurrences="1">
      <code>new FileInput('foo')</code>
    </PropertyTypeCoercion>
    <TypeDoesNotContainType occurrences="1">
      <code>$generator instanceof Generator</code>
    </TypeDoesNotContainType>
  </file>
  <file src="test/InputFilterAwareTraitTest.php">
    <InvalidArgument occurrences="2">
      <code>InputFilterAwareTrait::class</code>
      <code>InputFilterAwareTrait::class</code>
    </InvalidArgument>
    <MixedMethodCall occurrences="4">
      <code>getInputFilter</code>
      <code>getInputFilter</code>
      <code>setInputFilter</code>
      <code>setInputFilter</code>
    </MixedMethodCall>
  </file>
  <file src="test/InputFilterPluginManagerCompatibilityTest.php">
    <InvalidReturnType occurrences="1">
      <code>getInstanceOf</code>
    </InvalidReturnType>
  </file>
  <file src="test/InputFilterPluginManagerTest.php">
    <LessSpecificReturnStatement occurrences="1"/>
    <MoreSpecificReturnType occurrences="1"/>
  </file>
  <file src="test/InputFilterTest.php">
    <ImplementedReturnTypeMismatch occurrences="1"/>
    <LessSpecificReturnStatement occurrences="1">
      <code>$dataSets</code>
    </LessSpecificReturnStatement>
    <MoreSpecificReturnType occurrences="1"/>
    <NonInvariantDocblockPropertyType occurrences="1">
      <code>$inputFilter</code>
    </NonInvariantDocblockPropertyType>
    <PossiblyInvalidArgument occurrences="1">
      <code>$factory</code>
    </PossiblyInvalidArgument>
  </file>
  <file src="test/InputTest.php">
    <InvalidReturnStatement occurrences="1"/>
    <InvalidReturnType occurrences="1"/>
    <LessSpecificReturnStatement occurrences="1">
      <code>array_merge($emptyValues, $mixedValues)</code>
    </LessSpecificReturnStatement>
    <MissingClosureParamType occurrences="6">
      <code>$context</code>
      <code>$context</code>
      <code>$context</code>
      <code>$value</code>
      <code>$value</code>
      <code>$value</code>
    </MissingClosureParamType>
    <MixedArrayAccess occurrences="2">
      <code>$value['filtered']</code>
      <code>$value['raw']</code>
    </MixedArrayAccess>
    <MixedAssignment occurrences="2">
      <code>$tmpTemplate[4]</code>
      <code>$value</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="3">
      <code>method</code>
      <code>willReturn</code>
      <code>with</code>
    </MixedMethodCall>
    <MoreSpecificReturnType occurrences="1"/>
    <PossiblyInvalidArgument occurrences="1">
      <code>$translator</code>
    </PossiblyInvalidArgument>
    <PossiblyUndefinedMethod occurrences="1">
      <code>expects</code>
    </PossiblyUndefinedMethod>
    <RedundantCondition occurrences="1">
      <code>isArray</code>
    </RedundantCondition>
  </file>
</files>
